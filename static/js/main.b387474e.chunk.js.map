{"version":3,"sources":["actions/currentExpression.js","components/Calculator.js","components/History.js","App.js","reducers/history.js","reducers/index.js","reducers/currentExpression.js","index.js","actions/history.js"],"names":["toExpression","type","payload","operations","numbers","connect","state","expression","currentExpression","dispatch","operationToExpression","op","opToExpression","numberToExpression","num","numToExpression","addHistoryItem","expr","disabled","value","map","index","onClick","key","mapDispatchToProps","restoreExpression","list","history","item","result","App","Component","DEFAULT_STATE","combineReducers","action","ADD_HISTORY_ITEM","store","createStore","reducers","ReactDOM","render","document","querySelector","eval","replace"],"mappings":"yPAIaA,EAAe,SAACC,EAAMC,GAAP,MAAoB,CAC5CD,OACAC,Y,OCDEC,EAAa,CAAC,IAAK,IAAK,KACxBC,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GA6BpBC,eAVS,SAAAC,GAAK,MAAK,CAC9BC,WAAaD,EAAME,sBAGI,SAACC,GAAD,MAAe,CACxCC,sBAAwB,SAAAC,GAAE,OAAIF,EDrBF,SAACE,GAAD,OAAQX,EATT,gBASqCW,GCqBzBC,CAAeD,KACtDE,mBAAqB,SAAAC,GAAG,OAAIL,EDrBC,SAACK,GAAD,OAASd,EATd,aASuCc,GCqB1BC,CAAgBD,KACrDE,eAAiB,SAAAC,GAAI,OAAIR,EAASO,YAAeC,QAGpCZ,EA3BI,SAAC,GAAD,IACfE,EADe,EACfA,WACAG,EAFe,EAEfA,sBACAG,EAHe,EAGfA,mBACAG,EAJe,EAIfA,eAJe,OAKb,kCACF,8CACA,2BAAOE,SAAS,OAAOC,MAAOZ,IAC9B,6BACCJ,EAAWiB,KAAI,SAACT,EAAIU,GAAL,OACZ,4BAAQC,QAAS,iBAAa,MAAPX,EAAaK,EAAeT,GACvDG,EAAsBC,IAAKY,IAAKF,GAAQV,MAExC,6BACCP,EAAQgB,KAAI,SAAAN,GAAG,OAAI,4BAAQQ,QAAS,kBAAMT,EAAmBC,IAAMS,IAAKT,GAAMA,UCJ7EU,EAAqB,CACvBC,kBFP6B,SAACvB,GAAD,MAAc,CAC3CD,KAX8B,qBAY9BC,aEQWG,eARS,SAACC,GAAD,MAAY,CAChCoB,KAAOpB,EAAMqB,WAOuBH,EAAzBnB,EAlBC,SAAC,GAAD,QAAEqB,YAAF,MAAS,GAAT,EAAaD,EAAb,EAAaA,kBAAb,OAAqC,kCACjD,4CACA,4BACKC,EAAKN,KAAI,SAACQ,EAAMP,GAAP,OAAiB,wBAAIE,IAAKF,EAAOC,QAAS,kBAAMG,EACzDG,EAAKX,QACDW,EAAKX,KAFiB,MAERW,EAAKC,gBCSfC,E,iLAXX,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALQC,a,eCHZC,EAAgB,GCGPC,cAAgB,CAC3BN,QDFW,WAAoC,IAAnCrB,EAAkC,uDAA1B0B,EAAeE,EAAW,uCAC9C,OAAOA,EAAOjC,MACV,KAAKkC,IACD,MAAM,GAAN,mBAAW7B,GAAX,CAAkB4B,EAAOhC,UAE7B,QAAU,OAAOI,ICFrBE,kBCFW,WAAoC,IAAnCF,EAAkC,uDAF5B,GAEiB4B,EAAW,uCAC9C,OAAOA,EAAOjC,MACV,INPqB,gBMQrB,INPkB,aMOA,OAAOK,EAAQ4B,EAAOhC,QACxC,KAAKiC,IAAkB,MAAO,GAC9B,INR0B,qBMQA,OAAOD,EAAOhC,QACxC,QAAU,OAAOI,MCJnB8B,EAAQC,YAAYC,GAG1BC,IAASC,OACD,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAERK,SAASC,cAAc,W,wECd3B,wKAAO,IAAMP,iBAAmB,mBAEnBnB,eAAiB,SAAjBA,eAAkBC,MAAD,MAAW,CACrChB,KAAOkC,iBACPjC,QAAU,CACNe,UACAY,OAASc,KAAK1B,KAAK2B,QAAQ,QAAQ,U","file":"static/js/main.b387474e.chunk.js","sourcesContent":["export const ADD_OPERATION = 'ADD_OPERATION';\r\nexport const ADD_NUMBER = 'ADD_NUMBER';\r\nexport const RESTORE_EXPRESSION = 'RESTORE_EXPRESSION';\r\n\r\nexport const toExpression = (type, payload) => ({\r\n    type,\r\n    payload\r\n});\r\n\r\nexport const opToExpression = (op) => toExpression(ADD_OPERATION, op);\r\nexport const numToExpression = (num) => toExpression(ADD_NUMBER, num);\r\n\r\nexport const restoreExpression = (payload) => ({\r\n    type : RESTORE_EXPRESSION,\r\n    payload,\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { opToExpression, numToExpression } from '../actions/currentExpression';\r\nimport { addHistoryItem } from '../actions/history';\r\n\r\nconst operations = ['-', '+', '='];\r\nconst numbers = [0,1,2,3,4,5,6,7,8,9];\r\n\r\nconst Calculator = ({\r\n    expression,\r\n    operationToExpression,\r\n    numberToExpression,\r\n    addHistoryItem\r\n}) => <fieldset>\r\n    <legend>Calculator</legend>\r\n    <input disabled='true' value={expression} />\r\n    <br />\r\n    {operations.map((op, index) => (\r\n        <button onClick={() => op === '=' ? addHistoryItem(expression) : \r\n    operationToExpression(op)} key={index}>{op}</button>)\r\n    )}\r\n    <br />\r\n    {numbers.map(num => <button onClick={() => numberToExpression(num)} key={num}>{num}</button>)}\r\n</fieldset>;\r\n\r\nconst mapStateToProps = state => ({\r\n    expression : state.currentExpression,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  operationToExpression : op => dispatch(opToExpression(op)),\r\n  numberToExpression : num => dispatch(numToExpression(num)),\r\n  addHistoryItem : expr => dispatch(addHistoryItem(expr))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { restoreExpression } from '../actions/currentExpression';\r\n\r\nconst History = ({list = [], restoreExpression }) => <fieldset>\r\n    <legend>History:</legend>\r\n    <ui>\r\n        {list.map((item, index) => <li key={index} onClick={() => restoreExpression\r\n        (item.expr) }>\r\n            {item.expr} = {item.result}\r\n        </li>)}\r\n    </ui>\r\n</fieldset>\r\n\r\nconst mapStateToProps = (state) => ({\r\n    list : state.history\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    restoreExpression\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","import React, { Component } from 'react';\r\nimport Calculator from './components/Calculator';\r\nimport History from './components/History';\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Calculator />\r\n          <History />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  export default App;","import { ADD_HISTORY_ITEM } from '../actions/history';\r\n\r\nconst DEFAULT_STATE = [];\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch(action.type) {\r\n        case ADD_HISTORY_ITEM : {\r\n            return [...state, action.payload];\r\n        }\r\n        default : return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport history from './history';\r\nimport currentExpression from './currentExpression';\r\n\r\nexport default combineReducers({\r\n    history,\r\n    currentExpression\r\n})","import { ADD_OPERATION, ADD_NUMBER, RESTORE_EXPRESSION } from '../actions/currentExpression';\r\nimport { ADD_HISTORY_ITEM } from '../actions/history';\r\n\r\nconst DEFAULT_STATE = '';\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch(action.type) {\r\n        case ADD_OPERATION : return state + action.payload;\r\n        case ADD_NUMBER : return state + action.payload;\r\n        case ADD_HISTORY_ITEM: return '';\r\n        case RESTORE_EXPRESSION : return action.payload;\r\n        default : return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\n\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n    document.querySelector('#root'));","export const ADD_HISTORY_ITEM = 'ADD_HISTORY_ITEM';\r\n\r\nexport const addHistoryItem = (expr) => ({\r\n    type : ADD_HISTORY_ITEM,\r\n    payload : {\r\n        expr,\r\n        result : eval(expr.replace(/=\\s*$/,''))\r\n    }\r\n})"],"sourceRoot":""}